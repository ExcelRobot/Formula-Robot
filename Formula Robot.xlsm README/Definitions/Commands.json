{
  "Commands": [
    {
      "Name": "Apply Filter To Array",
      "Description": "Create Filter formula based on top row spill range formula.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelActiveCellContainsFormula",
      "MacroExpression": "modApplyFilterToArray.ApplyFilterToArray([[ActiveCell]],[[ActiveCell.Offset(1,1)]])",
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Auto Fill Down",
      "Description": "Fill formula or value in active cell down using smart automation.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelSelectionIsSingleArea",
      "LaunchCodes": [
        "d",
        "fd",
        "afd"
      ],
      "MacroExpression": "modFillArray.FillDown([[Selection]])",
      "Tags": [
        "Fill"
      ]
    },
    {
      "Name": "Auto Fill To Right",
      "Description": "Fill formula or value in active cell to right using smart automation.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelSelectionIsSingleArea",
      "LaunchCodes": [
        "r",
        "fr",
        "afr"
      ],
      "MacroExpression": "modFillArray.FillToRight([[Selection]])",
      "Tags": [
        "Fill"
      ]
    },
    {
      "Name": "Auto-Fit Formula Bar",
      "Description": "Autofit formula bar height based on formula length so that whole formula is visible.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelActiveCellContainsFormula|ExcelActiveCellIsSpillParent|ExcelActiveCellIsNotEmpty",
      "MacroExpression": "modAutofitFormula.AutofitFormulaBar([[ActiveCell]])",
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Compact Formula Format",
      "Description": "Compact formula format of selected cells containing formulas.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelActiveCellContainsFormula",
      "CommandAfter": "Auto-Fit Formula Bar",
      "LaunchCodes": [
        "bo"
      ],
      "MacroExpression": "modAutofitFormula.FormatFormulas([[Selection]],TRUE)",
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Copy Formula To English",
      "Description": "Translate ActiveCell formula to en-us locale and copy to clipboard.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelActiveCellContainsFormula",
      "Outputs": [
        {
          "Name": "Message To User",
          "Description": "Message to user.",
          "Type": "MessageBoxOutput",
          "Title": "Copy Formula To English",
          "TextBefore": "Copied to clipboard:\r\n\r\n"
        },
        {
          "Name": "Save To Clipboard",
          "Description": "Save to clipboard.",
          "Type": "ClipboardOutput"
        }
      ],
      "MacroExpression": "modTranslation.CopyFormulaToEnglish([[ActiveCell]])",
      "Tags": [
        "Translate"
      ]
    },
    {
      "Name": "Format Formulas",
      "Description": "Format formulas from selected cells. It will only change cell formula which has a formula.",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "ff",
        "unbo"
      ],
      "MacroExpression": "modAutofitFormula.FormatFormulas([[Selection]])",
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Generate Table Lookup Lambdas",
      "Description": "Generate lambdas for each column of an Excel Table.",
      "Type": "VBAMacroCommand",
      "MacroExpression": "modTableLookupLambda.GenerateTableLookupLambdas([[ActiveCell]], [[Selection]])",
      "Tags": [
        "Table"
      ]
    },
    {
      "Name": "Map To Array",
      "Description": "Convert spill parent cell formula to use Map for all the cell of the spill range.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelActiveCellContainsFormula",
      "LaunchCodes": [
        "map",
        "tile"
      ],
      "MacroExpression": "modMapToArray.MapToArray([[ActiveCell]])",
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Paste As References",
      "Description": "Paste clipboard range address to active cell.",
      "Type": "ExcelFormulaCommand",
      "UserContextFilter": "ClipboardHasExcelData",
      "LaunchCodes": [
        "pr"
      ],
      "Formula": "=[[Clipboard::Address]]",
      "DestinationRangeAddress": "[[ActiveCell]]",
      "Tags": [
        "Paste",
        "Formula"
      ]
    },
    {
      "Name": "Paste Auto Fill Down",
      "Description": "Fill formula or value from clipboard range down using smart automation.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelSelectionIsSingleArea;ClipboardHasExcelData",
      "LaunchCodes": [
        "pd",
        "pf",
        "pfd"
      ],
      "MacroExpression": "modFillArray.PasteFillDown([Clipboard],[[ActiveCell]])",
      "Tags": [
        "Fill",
        "Paste"
      ]
    },
    {
      "Name": "Paste Auto Fill To Right",
      "Description": "Fill formula or value from clipboard range to right using smart automation.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelSelectionIsSingleArea;ClipboardHasExcelData",
      "LaunchCodes": [
        "pr",
        "pfr"
      ],
      "MacroExpression": "modFillArray.PasteFillToRight([Clipboard],[[ActiveCell]])",
      "Tags": [
        "Fill",
        "Paste"
      ]
    },
    {
      "Name": "Paste Exact Formula",
      "Description": "Paste formula exactly as copied and number formats.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ClipboardHasExcelData",
      "LaunchCodes": [
        "pe",
        "pef"
      ],
      "MacroExpression": "modPaste.PasteExactFormula([[Clipboard]])",
      "Tags": [
        "Paste"
      ]
    },
    {
      "Name": "Paste Translate Formula",
      "Description": "Given text in clipboard containing an Excel formula in en-us format, translates it to local languange, and puts it in active cell.",
      "Type": "VBAMacroCommand",
      "UserContextFilter": "ExcelActiveCellIsEmpty;ExcelSelectionIsSingleCell",
      "MacroExpression": "modTranslation.PasteTranslateFormula({{Clipboard}},[[ActiveCell]])",
      "Tags": [
        "Paste",
        "Translate"
      ]
    },
    {
      "Name": "Remove Outer Function",
      "Description": "Remove the outer function from ActiveCell formula e.g. ActiveCell formula =DROP(SEQUENCE(10,2),2,1) and after running the command it will be =SEQUENCE(10,2)",
      "Type": "VBAMacroCommand",
      "ShortCutSendKeyString": "^+z",
      "CommandBefore": "Select Spill Parent",
      "LaunchCodes": [
        "ro",
        "z"
      ],
      "MacroExpression": "modRemoveOuterFunction.RemoveOuterFunction([[Selection]])",
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Search Workbook For Specified Functions",
      "Description": "Searches cells, names, and conditional formatting for use of user specified functions and reports findings.",
      "Type": "VBAMacroCommand",
      "MacroExpression": "modFunctionSearch.SearchFunctions({{UserSpecifiedFunctions}},[[NewTableTargetToRight]])",
      "Tags": [
        "Search"
      ]
    },
    {
      "Name": "Search Workbook For Volatile Functions",
      "Description": "Searches cells, names, and conditional formatting for use of volatile functions and reports findings.",
      "Type": "VBAMacroCommand",
      "MacroExpression": "modFunctionSearch.SearchFunctions(\"NOW, TODAY, RAND, RANDBETWEEN, RANDARRAY, OFFSET, INDIRECT, CELL, INFO\",[[NewTableTargetToRight]])",
      "Tags": [
        "Search"
      ]
    },
    {
      "Name": "Select Spill Parent",
      "Description": "Select dynamic array formula cell. If no spill in ActiveCell then do nothing.",
      "Type": "VBAMacroCommand",
      "MacroExpression": "modDynamicFormula.SelectSpillParent()",
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Show Formula Text",
      "Description": "Show formula text of active cell in a specified adjacent cell.",
      "Type": "ExcelFormulaCommand",
      "Parameters": [
        {
          "Name": "OffsetXY",
          "Description": "X,Y offset string to be inserted into Destination Range address",
          "Type": "InputParameter",
          "Value": "-1,0",
          "DataType": "String",
          "DefaultValue": "-1,0",
          "Prompt": "Where would you like to show the formula text?",
          "ValidationList": "Above active cell,\"-1,0\"\r\nRight of active cell,\"0,1\"\r\nBelow active cell,\"1,0\""
        }
      ],
      "UserContextFilter": "ExcelActiveCellContainsFormula;ExcelSelectionIsSingleCell",
      "LaunchCodes": [
        "sft"
      ],
      "Formula": "=FORMULATEXT([[ActiveCell]])",
      "DestinationRangeAddress": "[ActiveCell.Offset({{OffsetXY::ExcelFormula()}})]",
      "ScrollToDestination": false,
      "Tags": [
        "Formula"
      ]
    },
    {
      "Name": "Time Formula",
      "Description": "Wraps formula in active cell with Timer lambda to evaluate calculation performance.",
      "Type": "ExcelFormulaCommand",
      "Parameters": [
        {
          "Name": "Include_Output",
          "Description": "Ask user whether to include output.",
          "Type": "InputParameter",
          "Value": "FALSE",
          "DefaultValue": "FALSE",
          "Prompt": "Do you want to include the formula output with the timer results?",
          "ValidationList": "\"No, return time only.\", FALSE\r\n\"Yes, return time and formula output.\", TRUE"
        }
      ],
      "UserContextFilter": "ExcelActiveCellContainsFormula;ExcelSelectionIsSingleCell",
      "Formula": "=Timer([[ActiveCell::Formula]],{{Include_Output}})",
      "Tags": [
        "Formula"
      ],
      "FormulaDependencies": [
        "Timer.lambda"
      ]
    },
    {
      "Name": "Toggle Expand Formula Bar",
      "Description": "If formula bar height is 1 then autofit it otherwise make it 1.",
      "Type": "VBAMacroCommand",
      "ShortCutSendKeyString": "^+u",
      "LaunchCodes": [
        "fb"
      ],
      "MacroExpression": "modAutofitFormula.ToggleExpandFormulaBar([[ActiveCell]])",
      "Tags": [
        "Formula"
      ]
    }
  ]
}